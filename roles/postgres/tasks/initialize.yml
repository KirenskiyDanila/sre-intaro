- name: Set PostgreSQL environment variables.
  template:
    src: postgres.sh.j2
    dest: /etc/profile.d/postgres.sh
    mode: 0644
  notify: Restart postgres
  become: true

- name: Ensure PostgreSQL data directory exists.
  file:
    path: "{{ postgres_data_dir }}"
    owner: "{{ postgres_user}}"
    state: directory
    mode: 0700
  become: true

- name: Check if PostgreSQL database is initialized.
  stat:
    path: "{{ postgres_data_dir }}/PG_VERSION"
  register: pgdata_dir_version
  become: true

- name: Ensure PostgreSQL database is initialized.
  command: "{{ postgres_bin_path }}/postgresql-14-setup initdb"
  when: not pgdata_dir_version.stat.exists
  become: true
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

- name: Ensure PostgreSQL service is enabled
  service:
    name: postgresql-14
    state: started
    enabled: yes
  become: true

- name: Ensure PostgreSQL log directory exists.
  file:
    path: "{{ postgres_data_dir }}/pg_log"
    owner: "{{ postgres_user }}"
    state: directory
    mode: 0700
  become: true

- name: Ensure we have listen_addresses line in postgresql.conf file
  lineinfile:
    path: "{{ postgres_data_dir }}/postgresql.conf"
    line: "listen_addresses = '*'"
    regexp: "^listen_addresses = \\'\\*\\'$"
  become: true

- name: Ensure we have IPv4 line in pg_hba.conf
  lineinfile:
    path: "{{ postgres_data_dir }}/pg_hba.conf"
    line: 'host    all            all             172.0.0.0/8                scram-sha-256'
    regexp: '^host( )+all( )+all( )+127.0.0.1\/32( )+scram-sha-256$'
  become: true

- name: Set production settings
  postgresql_set:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
    - "{{ postgres_production_settings }}"
  become: true
  become_user: "{{ postgres_user }}"
  notify: Restart postgres
